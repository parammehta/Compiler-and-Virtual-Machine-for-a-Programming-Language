[Installation]
When importing the project into Eclipse, you will require the plug-in TestNG. The plug-in is strictly used for our test cases, however, you may still run our Main.java without installing the plug-in.
Directions on how to acquire the plugin is dicussed below, taken from TestNG.org:

"Java 1.7+ is required for running the TestNG for Eclipse plugin.
Eclipse 4.2 and above is required. Eclipse 3.x is NOT supported any more, please update your Eclipse to 4.2 or above.
You can use either the Eclipse Marketplace (http://marketplace.eclipse.org/content/testng-eclipse) or the update site:

Install via Eclipse Marketplace:
Go to the TestNG page on the Eclipse Market Place (https://marketplace.eclipse.org/content/testng-eclipse) and drag the icon called "Install" onto your workspace.

Install from update site:
1. Select Help / Install New Software...
2. Enter the update site URL in "Work with:" field: http://beust.com/eclipse.
3. Make sure the check box next to URL is checked and click Next.
4. Eclipse will then guide you through the process.

Note that the URL's are update sites as well, not direct download links."

[Intermediate Code]
Our intermediate code is written using function calls that reads the parse tree generated by ANTLR. The intermediate code is basically a .class file for Java that we manually write using a stack, assembly-like load statements, and storing values into addresses etc. An example can be found by running the method "compile(ANTLRInputStream input)".

[Additional Features]
1. Functions:
	We implemented functions as a blueprint for if-then-else statements and decided to keep the feature. Functions do not accept arguments as of now.
2. Scope:
	To have multiple variables within/outside of functions, we implemented scope so this can be allowed.
